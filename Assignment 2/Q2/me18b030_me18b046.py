# -*- coding: utf-8 -*-
"""ME18B030_ME18B046_Direhorse.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z9-1qcRCGn8Rxc2crhSVMWcN66UvvUPK
"""

import pandas as pd
import tensorflow as tf
import matplotlib.pyplot as plt
import numpy as np
from sklearn.metrics import mean_squared_error

df = pd.read_csv('direhorse_data.csv')
df.head()

df.shape

predictions = 233.846*(1-np.exp(-0.006042*df['Ages']))
print("Mean Squared Error of the non-linear model",mean_squared_error(predictions,df['Weights']))

df.plot.scatter(x='Ages',y='Weights',marker='o')
plt.title('Scatter Plot')
plt.plot(df['Ages'],predictions)

shuffled_df = df.sample(frac=1,random_state=1).reset_index(drop=True)
x_train, y_train = shuffled_df['Ages'], shuffled_df['Weights']
# x_test, y_test = df[50:]['Ages'], df[50:]['Weights']

model = tf.keras.models.Sequential([
  # tf.keras.layers.Normalization(input_shape=[1,], axis=None),
  tf.keras.layers.InputLayer(input_shape=(1,)),
  tf.keras.layers.Dense(1024,activation='sigmoid'),
  tf.keras.layers.Dropout(0.1),
  tf.keras.layers.Dense(512,activation='relu'),
  tf.keras.layers.Dense(1)
])

model.summary()

model.compile(optimizer='adam',
              loss=tf.keras.losses.mean_squared_error,)

history = model.fit(x_train, y_train, epochs=250, validation_split=0.15)

def plot_loss(history):
  plt.plot(history.history['loss'], label='loss')
  plt.plot(history.history['val_loss'], label='val_loss')
  plt.ylim([0, 150])
  plt.xlabel('Epoch')
  plt.ylabel('Error')
  plt.legend()
  plt.grid(True)

plot_loss(history)

print("Mean Squared Error of the trained ANN",mean_squared_error(df['Weights'],model.predict(df['Ages'])))

plt.plot(df['Ages'],model.predict(df['Ages']),label='ANN')
plt.scatter(df['Ages'],df['Weights'],label='Data',marker='o')
plt.plot(df['Ages'],predictions,label='Non Linear Model')
plt.xlabel('Ages')
plt.ylabel('Weights')
plt.title("Comparing Performances")
plt.legend()
plt.show()

